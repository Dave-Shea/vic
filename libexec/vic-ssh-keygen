#!/bin/sh

yell() { echo "$0: $*" >&2; }
die() { yell "$*"; exit 111; }
try() { "$@" || die "cannot $*"; }

description="Generates ssh keys for temporary use during VIC creation."

debug() { [ "$DEBUG" ] && try echo "# ${*}" >&${fd:-2}; }
verbose() { [ "$VERBOSE" ] && try echo "${*}" >&${fd:-2}; }

cleanup() {
# remove temp dir
rm -rf "${session_tmpdir}"
[ $DEBUG ] && verbose "Removing temp dir: ${TEMPNAME}"
}

sunique() {
# RFC 4122 compliant, cheap unique string.
# Because mktemp is not 100% portable.
# Returns md5 hash, string only, and portable.
# Hack-salted by passing string input.
_var5=`echo "${$}.${PPID}.$(date +%s).${*}" | try openssl md5`
echo ${_var5#*' '} | try awk '{OFS="-"; print substr($0,1,8), substr($0,9,4), substr($0,15,4), substr($0,19,4), substr($0,23,14)}'
}

rfc3339() {
# Retch the time in RFC 3339 / ISO 8601 format.
date +%Y-%m-%dT%H:%M:%S%z | sed 's/./&:/22'
}

usage() {
# accepts 1 user message as string
fd="${fd:-2}" # stderr
ec="${ec:-5}" # Input/output error
try cat - 2>&$fd << EOM

${0##*/} -- ${description}

  usage:
       ${0##*/} [-h]
       ${0##*/} [-s] session_id

  The ${0##*/}  utility can be used to generate ssh keys for trust handoff
  and VIC bootstrapping tasks.
  The purpose of wrapping ssh-keygen(1) are for automation:

     - creating temporary keys in specific temporary location
     - redirecting output,
         - interactive prompts to stderr
         - key output paths to stdout

  When successfully exiting, ${0##*/} will print paths to the ssh private/public
  key pair created to stdout.

Arguments and config parameters for for ${0##*/}:

     -s session
           Session key, may also be set in ENV.
           When not supplied, a random RFC4122 UID will be generated by this
           utility to prevent filename collisions.

     -p item_name
           Usually a vic_name, but can be any human name which is used
           to generate human-friendly file names for keys. 

     -y "yes" option, bypass password interactive prompt and generate keys
         without passphrase.  Should be used with caution, created to facilitate
         "answer all yes" for vic creation tools

     -C comment
            Analagous to ssh(1) -C flag.

ENV accepted:

     VIC_CREATE_SESSION - analagous to '-s' session arguement.
         When both ENV and arg are passed, the ARG wins.

     TMPDIR - default to /tmp/

BUGS:
     When the program is interrupted, only the top level UID directory
     is cleaned up, which may leave behind named directories.  This
     behavior is to protect other keys from being accidentally deleted.

EOM
[ -n "$1" ] && printf "\n${1}\n"
exit "$ec"
}


argproc() {
debug "${0} argproc, big args processing, mostly vars"
debug "$*"
while getopts 's:C:p:yvh' opt; do
case "$opt" in
s) session_id="${OPTARG}"
  debug "session_id=${session_id}"
;;
C) keycomment="${OPTARG}"
  debug "keycomment=${keycomment}"
;;
p) item_name="${OPTARG}"
  debug "item_name=${item_name}"
;;
y) nopass="YES"
  debug "nopass=${nopass}"
;;
h) ec=0 fd=1 usage
;;
# *) usage
# ;;
esac
done
shift $((OPTIND - 1))
}


## vars

argproc "$@"
fd="${fd:-2}" # stderr
uid="`sunique`"
uid="${VIC_CREATE_SESSION:-$uid}"
session_id="${session_id:-$uid}"
TMPDIR="${TMPDIR:-/tmp}"
item_name="${item_name:-general}"

session_tmpdir="${TMPDIR}/${item_name}/${session_id}/ssh"
debug "$session_tmpdir"

# key basics
keytype=rsa
keysize="4096"
comment="${LOGNAME} generated key for ${item_name}:${session_id}: via ${0##*/}"
key_name="${item_name}_id_${keytype:-rsa}"


## action

debug "Generating ssh keypair in: $session_tmpdir"

trap 'cleanup' 1 2 3 6 14 15
try mkdir -p "$session_tmpdir"
try cd "$session_tmpdir"

if [ "${nopass}" = 'YES' ] ; then
  try ssh-keygen -P ''\
    -C "`rfc3339` ${keycomment:-$comment}" \
    -b "${keysize}" -t "${keytype}" \
    -f "${key_name:-id_rsa}" 1>&2
else
  try ssh-keygen \
    -C "`rfc3339` ${keycomment:-$comment}" \
    -b "${keysize}" -t "${keytype}" \
    -f "${key_name:-id_rsa}" 1>&2
fi

for i in `find . -name "*${keytype}*" -type f -print` ; do
  echo "${session_tmpdir}/${i##*/}"
done

true
